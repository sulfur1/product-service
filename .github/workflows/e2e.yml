# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: E2E Test

on:
  push:
    branches:
      - '**'
      - '!master'

env:
  REGISTRY: ghcr.io
  PATH_SQL: ./e2e/insert-data.sql
  API_VERSION: 0.0.1-SNAPSHOT

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Maven install
      run: mvn -B install -Dmaven.test.skip=true -Dcheckstyle.skip
    - name: Log in to the Container registry
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        #password: ${{ github.token }}
    - name: Docker Compose Action
      run: |
        docker volume create customers-db-data
        docker volume create products-db-data
        docker volume create inquiries-db-data
        docker volume create pgAdmin-data
        docker-compose -f ./Docker/db.yml -f ./Docker/services.yml up -d
    - name: We are waiting until we receive the application version
      run: |
        sudo apt-get install -y jq
        sh ./e2e/script.sh
    - run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends postgresql-client
    - name: Insert data sql
      run: psql -d postgresql://postgres@localhost:5433/product_db -f ${{ env.PATH_SQL }}
      working-directory: .
      env:
        PGPASSWORD: admin
    - name: Run e2e tests
      run: |
        cd e2e
        mvn -B test -D tests.skip=false
